<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="description" content="{{ metaDescription if metaDescription else (excerpt if excerpt else 'Design Engineering, Accessibility, Frontend Design & CSS') | safe }}">
        <meta name="og:description" content="{{ metaDescription if metaDescription else (excerpt if excerpt else 'Design Engineering, Accessibility, Frontend Design & CSS') | safe }}">
        <meta name="author" content="Thomas Michael Semmler">
        <link rel="preload" as="font" href="{{ '/assets/fonts/work-sans-variable-subset.woff2' | url }}" as="font" type="font/woff2" crossorigin>
        <link rel="preload" as="font" href="{{ '/assets/fonts/poppins-regular-subset.woff2' | url }}" as="font" type="font/woff2" crossorigin>
        <link rel="preload" as="style" href="{{ '/css/fonts.css' | url }}">
        <title>{{ title }} - hello, yes. I'm Thomas Michael Semmler: CSS Developer, Designer & Developer from Vienna, Austria</title>
        <link rel="stylesheet" type="text/css" href="{{ '/css/fonts.css' | url }}" media="print" onload="this.media='all'">
        <link rel="stylesheet" type="text/css" href="{{ '/css/style.css' | url }}">
        <link rel="icon" href="{{ '/assets/favicons/illusion/favicon.ico' | url }}" type="image/x-icon" data-favicon>
        <link rel="icon" href="{{ '/assets/favicons/illusion/icon.svg' | url }}" type="image/svg+xml" data-favicon>
        <link rel="apple-touch-icon" href="{{ '/assets/favicons/illusion/apple-touch-icon.png' | url }}" data-favicon>
        <noscript>
            <link rel="stylesheet" type="text/css" href="{{ '/css/fonts.css' | url }}">
        </noscript>
        <script>
            if (navigator && navigator.serviceWorker) {
                navigator.serviceWorker.register('{{ '/sw.js' | url }}');
            }
        </script>
    </head>
    <body class="site-layout {{ bodyClass }}">
        {% include 'h-card.njk' %}
        <nav class="site-skip  skip-to-content" aria-label="Jump to parts of this page">
            <a href="#site-content">Skip to Content</a>
            <a href="#site-menu">Skip to Main Navigation</a>
            <a href="#site-footer">Skip to Footer</a>
            {% include 'report-a11y-issue.njk' %}
        </nav>
        {% include 'icons.njk' %}
        {% include 'svg-patterns.njk' %}
        <header class="site-header" id="site-header">
            <h1 class="site-header__title">
                <a href="{{ '/' | url }}">hello, yes.</a>
            </h1>
            <div class="site-header__navigation">
                <a class="button  site-header__open-menu" href="#site-menu">
                    <span class="button__text">Menu</span>
                    <span class="button__icon" aria-hidden="true">
                        <svg height="10" width="2"><use xlink:href="#icon-open-menu" /></svg>
                    </span>
                </a>
                <nav class="site-menu" id="site-menu" data-menu aria-labelledby="site-menu-label">
                    <div class="site-menu__header"> 
                        <h2 class="site-menu__header-title" id="site-menu-label">Main Navigation</h2>
                        <a class="button  site-menu__header-close" href="#site-content" data-close-site-menu>
                            <span class="button__text">close</span>
                        </a>
                    </div>
                    <ul class="menu  site-menu__navigation">
                        {% for name, item in menu %}
                            {% if not item.hidden %}
                                <li class="menu__item {% if item.small %}ctx--small{% endif %}">
                                    <a href="/{{ item.url | url }}" {% if page.url == ( '/' + item.url + '/' ) %}aria-current="page"{% endif %}>
                                        <span class="text">{{ item.name }}</span>
                                        {% if not item.small %}
                                            <span class="icon" aria-hidden="true">
                                                <svg height="12" width="20">
                                                    <use xlink:href="#icon-nav-arrow">
                                                </svg>
                                            </span>
                                        {% endif %}
                                    </a>
                                </li>
                            {% endif %}
                        {% endfor %}
                    </ul>
                    <div class="site-menu__footer">
                        {% include 'report-a11y-issue.njk' %}
                        {% include 'accent-color-settings.njk' %}
                    </div>
                </nav>
            </nav>
            </header>
        {{ content | safeÂ }}
        <footer class="site-footer">
            <div class="site-footer__settings">
                <a class="button  site-footer__settings-toggle" href="#footer-settings-menu" data-toggle-footer-settings>
                    <span class="button__text">change color</span>
                    <span class="button__icon" aria-hidden="true">
                        <svg height="10" width="2"><use xlink:href="#icon-open-menu" /></svg>
                    </span>
                </a>
                <div class="accent-color-settings-menu" id="footer-settings-menu">
                    {% include 'accent-color-settings.njk' %}
                </div>
            </div>
            <p class="site-footer__copy" id="site-copy">&copy; 2021 Thomas Michael Semmler</p>
            {% include 'report-a11y-issue.njk' %}
        </footer>
        <script>

            const root = document.documentElement;
            const closeMenuButton = document.querySelector('[data-close-site-menu]');
            const menu = document.querySelector('[data-menu]');
            const accentColorSettings = document.querySelectorAll('[data-accent-color-settings]');
            const accentOverride = sessionStorage['accent-color-override'];
            const footerSettingsButton = document.querySelector('[data-toggle-footer-settings]');
            const favicons = document.querySelectorAll('[data-favicon]');

            // set the favicon to one of the possible accent colors
            const updateFavicon = (_newColor) => {
                favicons.forEach( icon => {
                    let href = icon.href;
                    
                    // meaning, that the used favicon does not use the color from the override
                    if ( href.indexOf(_newColor)  ) {
                        const newHref = href.replace(/(illusion|sandwisp|mint|perano)/, _newColor);
                        icon.href = newHref;
                    }
                } );
            }
            
            // make the closing of the menu nicer
            closeMenuButton.addEventListener('click', e => {
                e.stopPropagation();
                e.preventDefault();
                const href = e.currentTarget.href; // makes sure that it uses the target of the element firing the event, not its children
                const fragment = href.substring(href.indexOf('#')); // wherever the link leads to...

                menu.classList.add('moveout'); // visually move the menu out
                menu.addEventListener('transitionend', function moveout(e) {
                    e.stopPropagation;
                    e.currentTarget.classList.remove('moveout'); // remove the class for animation
                    window.location.hash = fragment; // set the new target
                    // this is important, otherwise the menu will keep "closing" itself if its being opened again, ebcause the transitionend event triggers again
                    setTimeout(() => window.scrollTo(0,0)); // to prevent the jumping to the target
                    menu.removeEventListener('transitionend', moveout);
                })
            });

            // make accent color settings available
            accentColorSettings.forEach(menu => menu.style.display = 'flex');
            footerSettingsButton.style.display = 'inline-flex';

            // the button in the footer will actually change text, based on wether the settings are visible or not
            footerSettingsButton.addEventListener('click', e => {
                e.preventDefault();
                const text = e.currentTarget.querySelector('.button__text');
                const href = e.currentTarget.href;
                const fragment = href.substring(href.indexOf('#'));
                const isOpen = () => window.location.hash === fragment


                if ( isOpen() ) {
                    window.location.hash = 'site-copy';
                    text.textContent = 'change color';
                } else {
                    window.location.hash = fragment;
                    text.textContent = 'close';
                }
            })

            // set the theme from session storage, if its set
            if ( accentOverride ) {
                root.style.setProperty('--accent-color', `var(--color-hs-${accentOverride})`);
                updateFavicon(accentOverride);
            }

            // for every occurance of the accent color settings menu
            accentColorSettings.forEach( menu => {
                const colorChoices = menu.querySelectorAll('input');

                // allow changing of the accent color
                colorChoices.forEach( choice => {
                    // set the correct option as already checked, if a choice was already made and stored in the session
                    if ( accentOverride ) {
                        choice.checked = (choice.value === accentOverride);
                    }
                    
                    choice.addEventListener('change', () => {
                        // if the default is being clicked on, remove the inline style and clear the session as well
                        if ( choice.value === 'illusion' ) {
                            root.style.removeProperty('--accent-color');
                            sessionStorage.clear();
                        } else {
                            const newColor = `var(--color-hs-${choice.value})`;
                            root.style.setProperty('--accent-color', newColor);
                            sessionStorage['accent-color-override'] = choice.value;
                        }

                        updateFavicon(choice.value);
                    });
                });
            });

        </script>
    </body>
</html>